// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model SkillCategory {
  id     String  @id @default(cuid())
  name   String
  skills Skill[]
}

model Skill {
  id         String         @id @default(cuid())
  name       String
  photoUrl   String
  photoId    String
  lqip       String?
  projects   Project[]
  category   SkillCategory? @relation(fields: [categoryId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  categoryId String?
}

model ProjectCategory {
  id       String    @id @default(cuid())
  name     String
  projects Project[]
}

model Project {
  id         String           @id @default(cuid())
  name       String
  desc       String
  photoUrl   String
  photoId    String
  lqip       String?
  techStack  Skill[]
  repoUrl    String?
  demoUrl    String?
  category   ProjectCategory? @relation(fields: [categoryId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  categoryId String?
}
